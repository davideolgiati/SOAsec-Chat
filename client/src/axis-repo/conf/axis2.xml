<?xml version="1.0" encoding="UTF-8"?>
<axisconfig name="AxisJava2.0">
<!-- Engage the security module -->
<module ref="rampart"/>

<!-- FULL SECURITY -->
<parameter name="OutflowSecurity">
	<action>
		<items>UsernameToken Signature Encrypt</items>
		<user>client2</user>
		<passwordCallbackClass>client.PWCallbackClient</passwordCallbackClass>
		<signaturePropFile>axis-repo/conf/security.properties</signaturePropFile>
		<signatureKeyIdentifier>DirectReference</signatureKeyIdentifier>
		<encryptionKeyIdentifier>SKIKeyIdentifier</encryptionKeyIdentifier>
		<encryptionUser>service</encryptionUser>
		<optimizeParts>//xenc:EncryptedData/xenc:CipherData/xenc:CipherValue</optimizeParts>
	</action>
</parameter>

<parameter name="InflowSecurity">
	<action>
		<items>Signature Encrypt</items>
		<passwordCallbackClass>client.PWCallbackClient</passwordCallbackClass>
		<signaturePropFile>axis-repo/conf/security.properties</signaturePropFile>
	</action>
</parameter>

<!-- ================================================= -->
<!-- Parameters -->
<!-- ================================================= -->
<parameter locked="false" name="hotdeployment">true</parameter>
<parameter locked="false" name="hotupdate">true</parameter>
<parameter locked="false" name="enableMTOM">true</parameter>
<!-- Uncomment this to enable REST support -->
<!-- <parameter name="enableREST"
locked="false">true</parameter> -->
<parameter locked="false" name="userName">admin</parameter>
<parameter locked="false" name="password">axis2</parameter>
<!-- ================================================= -->
<!-- Message Receivers -->
<!-- ================================================= -->
<!--This is the Deafult Message Receiver for the system ,
if you want to have MessageReceivers for -->
<!--all the other MEP implement it and add the correct entry
to here, so that you can refer from-->
<!--any operation -->
<!--Note : You can ovride this for particular service by
adding the same element with your requirement-->
<messageReceivers>
	<messageReceiver class="org.apache.axis2.rpc.receivers.RPCInOnlyMessageReceiver" mep="http://www.w3.org/ns/wsdl/in-only"/>
	<messageReceiver class="org.apache.axis2.rpc.receivers.RPCMessageReceiver" mep="http://www.w3.org/ns/wsdl/in-out"/>
</messageReceivers>
<!-- ================================================= -->
<!-- Transport Ins -->
<!-- ================================================= -->
<transportReceiver class="org.apache.axis2.transport.http.SimpleHTTPServer" name="http">
<parameter locked="false" name="port">6060</parameter>
<!--If you want to give your own host address for EPR
generation-->
<!--uncommet following paramter , and set as you required.-->
<!--<parameter name="hostname"
locked="false">http://myApp.com/ws</parameter>-->
</transportReceiver>
<transportReceiver class="org.apache.axis2.transport.tcp.TCPServer" name="tcp">
<parameter locked="false" name="port">6061</parameter>
<!--If you want to give your own host address for EPR
generation-->
<!--uncommet following paramter , and set as you required.-->
<!--<parameter name="hostname"
locked="false">tcp://myApp.com/ws</parameter>-->
</transportReceiver>
<!-- ================================================= -->
<!-- Transport Outs -->
<!-- ================================================= -->
<transportSender class="org.apache.axis2.transport.tcp.TCPTransportSender" name="tcp"/>
<transportSender class="org.apache.axis2.transport.local.LocalTransportSender" name="local"/>
<!--<transportSender name="jms"
class="org.apache.axis2.transport.jms.JMSSender"/>-->
<transportSender class="org.apache.axis2.transport.http.CommonsHTTPTransportSender" name="http">
<parameter locked="false" name="PROTOCOL">HTTP/1.1</parameter>
<parameter locked="false" name="Transfer-Encoding">chunked</parameter>
</transportSender>
<transportSender class="org.apache.axis2.transport.http.CommonsHTTPTransportSender" name="https">
<parameter locked="false" name="PROTOCOL">HTTP/1.1</parameter>
<parameter locked="false" name="Transfer-Encoding">chunked</parameter>
</transportSender>
<!-- ================================================= -->
<!-- Phases -->
<!-- ================================================= -->
<phaseOrder type="InFlow">
        <!--   Global phases    -->
         <phase name="Transport">
            <handler class="org.apache.axis2.dispatchers.RequestURIBasedDispatcher" name="RequestURIBasedDispatcher">
                <order phase="Transport"/>
            </handler>

            <handler class="org.apache.axis2.dispatchers.SOAPActionBasedDispatcher" name="SOAPActionBasedDispatcher">
                <order phase="Transport"/>
            </handler>
        </phase>
        <phase name="Security"/>
        <phase name="PreDispatch"/>
        <phase class="org.apache.axis2.engine.DispatchPhase" name="Dispatch">
            <handler class="org.apache.axis2.dispatchers.AddressingBasedDispatcher" name="AddressingBasedDispatcher">
                <order phase="Dispatch"/>
            </handler>

            <handler class="org.apache.axis2.dispatchers.SOAPMessageBodyBasedDispatcher" name="SOAPMessageBodyBasedDispatcher">
                <order phase="Dispatch"/>
            </handler>

            <handler class="org.apache.axis2.engine.InstanceDispatcher" name="InstanceDispatcher">
                <order phase="Dispatch"/>
            </handler>
        </phase>
        <!--   Global phases   -->
        <!--   After the Dispatch phase module author or service author can add any phase he wants    -->
        <phase name="OperationInPhase"/>
    </phaseOrder>
    <phaseOrder type="OutFlow">
        <!--   user can add his own phases to this area  -->
        <phase name="OperationOutPhase"/>
        <!--  Global phases  -->
        <!--  these phases will run irrespective of the service  -->
        <phase name="MessageOut"/>
        <phase name="PolicyDetermination"/>
				<phase name="Security"/>
    </phaseOrder>
    <phaseOrder type="InFaultFlow">
        <phase name="PreDispatch"/>
        <phase class="org.apache.axis2.engine.DispatchPhase" name="Dispatch">
            <handler class="org.apache.axis2.dispatchers.RequestURIBasedDispatcher" name="RequestURIBasedDispatcher">
                <order phase="Dispatch"/>
            </handler>

            <handler class="org.apache.axis2.dispatchers.SOAPActionBasedDispatcher" name="SOAPActionBasedDispatcher">
                <order phase="Dispatch"/>
            </handler>

            <handler class="org.apache.axis2.dispatchers.AddressingBasedDispatcher" name="AddressingBasedDispatcher">
                <order phase="Dispatch"/>
            </handler>
    <handler class="org.apache.rampart.handler.WSDoAllReceiver" name="SecurityInHandler">
        <order phase="Security"/>
    </handler>
            <handler class="org.apache.axis2.dispatchers.SOAPMessageBodyBasedDispatcher" name="SOAPMessageBodyBasedDispatcher">
                <order phase="Dispatch"/>
            </handler>
            <handler class="org.apache.axis2.engine.InstanceDispatcher" name="InstanceDispatcher">
                <order phase="Dispatch"/>
            </handler>
			<handler class="org.apache.rampart.handler.WSDoAllReceiver" name="SecurityInHandler"> 
					<order phase="Security"/>
			</handler>
		</phase>
		<phase name="Security">
			<handler class="org.apache.rampart.handler.WSDoAllReceiver" name="SecurityInHandler"> 
				<order phase="Security"/>
			</handler>
		</phase>
          <!--      user can add his own phases to this area  -->
        <phase name="OperationInFaultPhase"/>
    </phaseOrder>
    <phaseOrder type="OutFaultFlow">
        <!--      user can add his own phases to this area  -->
        <phase name="OperationOutFaultPhase"/>
				<phase name="Security"/>
        <phase name="PolicyDetermination"/>
        <phase name="MessageOut"/>
    </phaseOrder>
</axisconfig>
